*Main.dart

import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:project3/screens/home/home.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    SystemChrome.setSystemUIOverlayStyle(SystemUiOverlayStyle(
      statusBarColor: Colors.transparent,
    ));
    return MaterialApp(
        title: 'VSAVVY',
        debugShowCheckedModeBanner: false,
        theme: ThemeData(
          backgroundColor: Color(0xFFFFAFAFA),
          primaryColor: Color(0XFFFFBD00),
        ),
        home: HomePage());
  }
}

detail.dart
import 'package:flutter/material.dart';
import 'package:project3/models/clothes.dart';
import 'package:project3/screens/detail/widget/detail_app_bar.dart';

class DetailPage extends StatelessWidget {
  final Clothes clothes;
  DetailPage(this.clothes);
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [DetailAppBar(clothes)],
        ),
      ),
    );
  }
}

*detail_app_bar.dart
import 'dart:html';

import 'package:flutter/material.dart';
import 'package:flutter/widgets.dart';
import 'package:project3/models/clothes.dart';
import 'package:carousel_slider/carousel_slider.dart';
import 'package:project3/screens/detail/widget/color_picker.dart';

class DetailAppBar extends StatefulWidget {
  final Clothes clothes;
  DetailAppBar(this.clothes);

  @override
  State<DetailAppBar> createState() => _DetailAppBarState();
}

class _DetailAppBarState extends State<DetailAppBar> {
  final List<Color> colors = [
    Color(0xFFE6CF),
    Color(0xFFEEDFB5),
    Color(0xFFCAE2C5),
    Color(0xFFBAE6EE)
  ];
  final CarouselController _controller = CarouselController();
  int _currentPage = 0;
  int _currentColor = 0;
  @override
  Widget build(BuildContext context) {
    return Container(
        child: Stack(
      children: [
        Container(
          child: CarouselSlider(
              carouselController: _controller,
              options: CarouselOptions(
                  height: 500,
                  viewportFraction: 1,
                  onPageChanged: (index, reason) {
                    setState(() {
                      _currentPage = index;
                    });
                  }),
              items: widget.clothes.detailUrl
                  .map(
                    (e) => Builder(
                      builder: (context) => Container(
                        margin: EdgeInsets.all(10),
                        decoration: BoxDecoration(
                            image: DecorationImage(
                                image: AssetImage('$e'), fit: BoxFit.fitHeight),
                            borderRadius: BorderRadius.circular(25)),
                      ),
                    ),
                  )
                  .toList()),
        ),
        Positioned(
          bottom: 30,
          left: 180,
          child: Row(
            children: widget.clothes.detailUrl
                .asMap()
                .entries
                .map((entry) => GestureDetector(
                      onTap: () => _controller.animateToPage(entry.key),
                      child: Container(
                        margin: EdgeInsets.symmetric(horizontal: 4),
                        width: 12,
                        height: 12,
                        decoration: BoxDecoration(
                            shape: BoxShape.circle,
                            color: Colors.white.withOpacity(
                                _currentPage == entry.key ? 0.9 : 0.4)),
                      ),
                    ))
                .toList(),
          ),
        ),
        Positioned(
          bottom: 30,
          right: 30,
          child: Container(
            height: 175,
            width: 50,
            padding: EdgeInsets.all(8),
            decoration: BoxDecoration(
              color: Colors.black.withOpacity(0.3),
              borderRadius: BorderRadius.circular(30),
            ),
            child: ListView.separated(
                padding: EdgeInsets.zero,
                itemBuilder: (context, index) => GestureDetector(
                    onTap: () {
                      setState(() {
                        _currentColor = index;
                      });
                    },
                    child: colorPicker(_currentColor == index, colors[index])),
                separatorBuilder: (_, index) => SizedBox(height: 3),
                itemCount: colors.length),
          ),
        )
      ],
    ));
  }
}

*clothes.dart

class Clothes {
  String title;
  String Subtitle;
  String price;
  String imageurl;
  List<String> detailUrl;
  Clothes(this.title, this.Subtitle, this.price, this.imageurl, this.detailUrl);
  static List<Clothes> generateClothes() {
    return [
      Clothes('Gucci', 'Hoodie', '\$80.00', 'assets/images/arrival1.png',
          ['assets/images/arrival1.png', 'assets/images/detail2.png']),
      Clothes(
          'Man Coat',
          'Rain-Jacket',
          '\$100.00',
          'assets/images/arrival2.png',
          ['assets/images/arrival2.png', 'assets/images/detail3.png']),
      Clothes('Gucci', 'Sleves', '\$100.00', 'assets/images/detail2.png',
          ['assets/images/detail2.png', 'assets/images/detail2.png']),
      Clothes(
          'Man Coat',
          'Rain-Jacket',
          '\$100.00',
          'assets/images/detail3.png',
          ['assets/images/detail3.png', 'assets/images/detail3.png'])
    ];
  }
}

*Color_Picker.dart
import 'package:flutter/material.dart';

class colorPicker extends StatelessWidget {
  final outerBorder;
  final Color color;
  colorPicker(this.outerBorder, this.color);

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: EdgeInsets.all(3),
      decoration: BoxDecoration(
          shape: BoxShape.circle,
          border: outerBorder ? Border.all(color: color, width: 2) : null),
      child: Container(
        padding: EdgeInsets.all(15),
        decoration: BoxDecoration(color: color, shape: BoxShape.circle),
      ),
    );
  }
}

*detailpage.dart
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:project3/screens/detail/detail.dart';

class HomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Home'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            // Pass any required data to the DetailPage constructor here
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) => DetailPage(data: "Hello from HomePage"),
              ),
            );
          },
          child: Text('Go to Detail Page'),
        ),
      ),
    );
  }
}

class DetailPage extends StatelessWidget {
  final String data;

  const DetailPage({required this.data});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Detail Page'),
      ),
      body: Center(
        child: Text(data),
      ),
    );
  }
}

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    SystemChrome.setSystemUIOverlayStyle(SystemUiOverlayStyle(
      statusBarColor: Colors.transparent,
    ));
    return MaterialApp(
      title: 'VSAVVY',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        backgroundColor: Color(0xFFFFAFAFA),
        primaryColor: Color(0XFFFFBD00),
      ),
      home: HomePage(),
    );
  }
}

*Homepage.dart
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:project3/screens/detail/detail.dart';

class HomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Home'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            String dataToSend = 'Hello from HomePage'; // Data to be passed
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) => DetailPage(dataToSend), // Passing data
              ),
            );
          },
          child: Text('Go to Detail Page'),
        ),
      ),
    );
  }
}

class DetailPage extends StatelessWidget {
  final String data; // Data received from HomePage

  DetailPage(this.data);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Detail Page'),
      ),
      body: Center(
        child: Text(data), // Displaying the received data
      ),
    );
  }
}

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    SystemChrome.setSystemUIOverlayStyle(SystemUiOverlayStyle(
      statusBarColor: Colors.transparent,
    ));
    return MaterialApp(
      title: 'VSAVVY',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        backgroundColor: Color(0xFFFFAFAFA),
        primaryColor: Color(0XFFFFBD00),
      ),
      home: HomePage(),
    );
  }
}



